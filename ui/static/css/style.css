:root {
    --russian-violet: #341E57ff;
    --baby-powder: #FAFBF9ff;
    --ash-gray: #C1D6BFff;
    --mantis: #65B152ff;
    --tekhelet: #5A287Eff;
}

html, body {
    height: 100%;
    margin: 0;
}
body {
    display: flex;
    flex-direction: column;
}
.content {
    flex: 1;
}
.footer {
color: #333;
padding: 8px;
text-align: center;
}
.footer a {
    color: #333;
}
.container {
    max-width: 980px;
    margin: 0 auto;
}
.w-100 {
    width: 100%;
}

.header-container {
    display: flex;
    align-items: center; /* Align items vertically in the center */
    justify-content: space-between; /* Push items to the edges */
    margin: 12px 0;
}

.header-container__left {
    margin: 0; /* Remove default margin to avoid unexpected spacing */
}

.header-container__right {
    margin-left: auto; /* Push the button to the right */
}
.logo {
    font-size: 1em;

}
.logo a {
    text-decoration: none;
    color: black;
}

.cc-table {
    width: 100%; /* Make the table span 100% of the container's width */
    border-collapse: collapse; /* Collapse borders to create a single border around the table */
}

.cc-table th, .cc-table td {
    padding: 12px 15px; /* Add padding for better readability */
    border: 1px solid #ddd; /* Add a single border around each cell */
}

.cc-table thead tr {
    background-color: #f2f2f2; /* Light gray background for the header */
    text-align: left; /* Align text to the left in the header */
}


 /* auto-striped */
.cc-table.cc-table-striped tbody tr:nth-child(even) {
    background-color: #f9f9f9; /* Light gray background for even rows */
}

.cc-table.cc-table-striped tbody tr:nth-child(odd) {
    background-color: #ffffff; /* White background for odd rows */
}

.cc-table.cc-table-striped tbody tr:hover {
    background-color: #f1f1f1; /* Slightly darker gray on hover for better interactivity */
}

/* manual striped */
.cc-table tbody tr.even {
    background-color: #f9f9f9; /* Light gray background for even rows */
}

.cc-table tbody tr.odd {
    background-color: #ffffff; /* White background for odd rows */
}

.cc-table tbody tr:hover {
    background-color: #f1f1f1; /* Slightly darker gray on hover for better interactivity */
}



.cc-table .active {
    font-weight: bold;
}

.cc-alert-flash {
    background: #1f8dd6;
    border-radius: 3px;
    color: #fff;
    padding: 1em 1em;
    text-align: center;
}
.cc-alert-error {
    background: #B22222;
    border-radius: 3px;
    color: #fff;
    padding: 1em 1em;
    text-align: center;
}

.navbar form { 
    display: inline-block;
}


.navbar {
    display: flex;
    justify-content: space-between;
    align-items: center;
    
}

.navbar .left, .navbar .right {
    display: flex;
    gap: 20px; /* Optional: Adjust gap between items as needed */
}

/* Media query for small viewports */
@media (max-width: 640px) {
    .navbar {
        flex-direction: column;
        align-items: flex-start; /* Align items to the start of the container */
       
    }

    .navbar .left, .navbar .right {
        flex-direction: column;
        width: 100%;
        gap: 0; /* Remove gap between items */
    }

    .navbar .left a, .navbar .right a, .navbar .right form, .navbar .right button {
        display: block; /* Ensure items take full width */
        width: 100%;
        margin: 4px 0;
        text-align: left; /* Optional: Align text to the left */
    }
}

/* Forms */
.pure-form input.error {
    border: 2px dashed #B22222;
}

.pure-form-message-inline.error, .pure-form-message.error {
    color: #B22222; 
}

.pure-form-aligned .pure-control-group label {
    width: 15em;
}
.pure-form-aligned .pure-control-group .pure-form-message-inline {
    text-align: left;
}
.pure-form-aligned .pure-control-group {
    margin-bottom: 2.5em
}
.pure-form-aligned .pure-control-group .explanation {
    color: #858585;
    font-size: 0.9em;
    text-align: center;
    width: 50%;
}
@media (max-width: 640px) {
    .pure-form-aligned .pure-control-group .explanation {
        width: 100%;
    }
    .pure-form-aligned .pure-control-group .pure-form-message-inline {
        display: block;
        width: 100%;
        text-align: center;
     }
}


/* Hero section */
.hero {
    
}
.hero__row {
    margin: 0 12px;
    display: flex;
    flex-wrap: wrap;
  }
  
  .hero__teaser, .hero__image {
    flex: 1 1 100%;
    box-sizing: border-box;
  }
  
  .hero__image img {
    width: 100%;
    height: auto;
  }
  
  @media (min-width: 960px) {
    .hero__row {
      align-items: center;
    }
    
    .hero__teaser {
      flex: 0 0 40%;
    }
  
    .hero__image {
      flex: 0 0 55%;
      margin-left: auto;
    }
  
    .hero__image img {
      width: 100%;
    }
  }
  
.hero__headline {
    font-family: 'Inter', sans-serif;
    font-style: normal;
    font-weight: 700;
    font-size: 42px;
    line-height: 51px;
    color: #151B32;
}

.hero__highlight {
    color: var(--tekhelet);
}
.pure-button-primary, a.pure-button-primary {
    background-color: var(--mantis);
}

.hero__teaser {
    font-family: 'Inter';
    font-style: normal;
    font-weight: 400;
    font-size: 16px;
    line-height: 24px;
    color: #333;
}
.hero__cta {
    margin: 48px 0;
}




/* General styles for all status links */
a.status-label {
    display: inline-block;
    color: white;
    padding: 5px 10px;
    border-radius: 3px;
    text-decoration: none;
    font-weight: bold;
    font-size: 14px;
    text-align: center; /* Center the emoji */
    line-height: 1.5; /* Vertically center the emoji */
}

a.status-live {
    background-color: red; /* Red background color */
    color: transparent; /* Hide the text */
    position: relative; /* Position for the pseudo-element */
}

.status-live::before {
    color: white;
    content: "live";
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%); /* Center the icon */
}


a.status-live:hover {
    background-color: darkred; /* Darker red on hover for better visual feedback */
}

/* Specific styles for each status type */
a.status-pending {
    /* background-color: grey; */
    color: transparent; /* Hide the text */
    position: relative; /* Position for the pseudo-element */
}

a.status-pending::before {
    content: "\231B"; /* Unicode for hourglass */
    color: white;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%); /* Center the icon */
}

a.status-done {
    /* background-color: lightgrey; */
    color: transparent; /* Hide the text */
    position: relative; /* Position for the pseudo-element */
}

a.status-done::before {
    content: "\2714"; /* Unicode for checkmark */
    color: black;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%); /* Center the icon */
}

a.status-future {
    background-color: lightblue;
    color: transparent; /* Hide the text */
    position: relative; /* Position for the pseudo-element */
}

a.status-future::before {
    content: "\23F1"; /* Unicode for stopwatch */
    color: white;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%); /* Center the icon */
}



.match-details {
    margin: 24px 0;
}

.match-details.match-details-top {
    margin-top: 48px;
}
.match-details__subtitle {
    font-size: 0.8em;
    color: lightslategray;
    text-transform: uppercase;
    margin: 0;
}
.match-details__result {
    font-size: 2em;
    margin: 0;
}

/* Live indicator */

.live-indicator {
    display: flex;
    align-items: center;
  }
  
  .live-indicator__circle {
    background-color: #e33a00;
    width: 12px;
    height: 12px;
    border-radius: 50%;
    margin: 0;
    position: relative;
  
    &::before, &::after {
      display: block;
      width: 20px;
      height: 20px;
      background-color: #e33a00;
      content: '';
      opacity: 0.4;
      border-radius: 50%;
      
      position: absolute;
      top: -4px;
      left: -4px;
      box-shadow: 0 0 10px 0 rgba(230, 56, 0, 0.4);
    }
    
    &::before {
      animation: grow 2s infinite;
    }
  }
  
  .live-indicator__text {
    margin-left: 10px;
    color: #e33a00;
    font-weight: bold;
  }
  
  
  @keyframes grow {
    0%    { transform: scale(0); }
    60%  { transform: scale(1.5); }
    100%  { transform: scale(0); }
  }